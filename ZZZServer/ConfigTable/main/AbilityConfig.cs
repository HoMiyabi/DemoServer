
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace cfg.main
{

public sealed partial class AbilityConfig : Luban.BeanBase
{
    public AbilityConfig(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        Name = (string)_obj.GetValue("name");
        TriggerOnAdd = (bool)_obj.GetValue("trigger_on_add");
        { var __json0 = _obj.GetValue("event_names"); EventNames = new System.Collections.Generic.List<string>((__json0 as JArray).Count); foreach(JToken __e0 in __json0) { string __v0;  __v0 = (string)__e0;  EventNames.Add(__v0); }   }
        TriggerInterval = (float)_obj.GetValue("trigger_interval");
        Effect = main.EffectConfig.DeserializeEffectConfig(_obj.GetValue("effect"));
    }

    public static AbilityConfig DeserializeAbilityConfig(JToken _buf)
    {
        return new main.AbilityConfig(_buf);
    }

    public readonly string Name;
    public readonly bool TriggerOnAdd;
    public readonly System.Collections.Generic.List<string> EventNames;
    public readonly float TriggerInterval;
    public readonly main.EffectConfig Effect;


    public const int __ID__ = -149973641;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        Effect?.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "name:" + Name + ","
        + "triggerOnAdd:" + TriggerOnAdd + ","
        + "eventNames:" + Luban.StringUtil.CollectionToString(EventNames) + ","
        + "triggerInterval:" + TriggerInterval + ","
        + "effect:" + Effect + ","
        + "}";
    }
}
}

