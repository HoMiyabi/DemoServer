
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace cfg.main
{

public sealed partial class DialogueGraphSentenceConfig : Luban.BeanBase
{
    public DialogueGraphSentenceConfig(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        Cid = (int)_obj.GetValue("cid");
        { var __json0 = _obj.GetValue("sentences"); Sentences = new System.Collections.Generic.List<main.DialogueSentenceConfig>((__json0 as JArray).Count); foreach(JToken __e0 in __json0) { main.DialogueSentenceConfig __v0;  __v0 = main.DialogueSentenceConfig.DeserializeDialogueSentenceConfig(__e0);  Sentences.Add(__v0); }   }
    }

    public static DialogueGraphSentenceConfig DeserializeDialogueGraphSentenceConfig(JToken _buf)
    {
        return new main.DialogueGraphSentenceConfig(_buf);
    }

    public readonly int Cid;
    /// <summary>
    /// 未设置或设置0为id+1，-1为退出
    /// </summary>
    public readonly System.Collections.Generic.List<main.DialogueSentenceConfig> Sentences;


    public const int __ID__ = 288353446;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        foreach (var _e in Sentences) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "cid:" + Cid + ","
        + "sentences:" + Luban.StringUtil.CollectionToString(Sentences) + ","
        + "}";
    }
}
}

