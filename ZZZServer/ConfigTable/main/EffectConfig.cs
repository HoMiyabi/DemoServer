
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace cfg.main
{

public sealed partial class EffectConfig : Luban.BeanBase
{
    public EffectConfig(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        Name = (string)_obj.GetValue("name");
        DurationPolicy = (main.EffectDurationPolicyConfig)(int)_obj.GetValue("duration_policy");
        Duration = (float)_obj.GetValue("duration");
        StackLimit = (int)_obj.GetValue("stack_limit");
        { var __json0 = _obj.GetValue("modifiers"); Modifiers = new System.Collections.Generic.List<main.ModifierConfig>((__json0 as JArray).Count); foreach(JToken __e0 in __json0) { main.ModifierConfig __v0;  __v0 = main.ModifierConfig.DeserializeModifierConfig(__e0);  Modifiers.Add(__v0); }   }
    }

    public static EffectConfig DeserializeEffectConfig(JToken _buf)
    {
        return new main.EffectConfig(_buf);
    }

    public readonly string Name;
    public readonly main.EffectDurationPolicyConfig DurationPolicy;
    public readonly float Duration;
    public readonly int StackLimit;
    public readonly System.Collections.Generic.List<main.ModifierConfig> Modifiers;


    public const int __ID__ = 1807631976;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        foreach (var _e in Modifiers) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "name:" + Name + ","
        + "durationPolicy:" + DurationPolicy + ","
        + "duration:" + Duration + ","
        + "stackLimit:" + StackLimit + ","
        + "modifiers:" + Luban.StringUtil.CollectionToString(Modifiers) + ","
        + "}";
    }
}
}

